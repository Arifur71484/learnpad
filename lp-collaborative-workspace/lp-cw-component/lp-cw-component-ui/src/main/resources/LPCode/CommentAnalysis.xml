<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.2" reference="LPCode.CommentAnalysis" locale="">
  <web>LPCode</web>
  <name>CommentAnalysis</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1467276345000</creationDate>
  <parent>LPCode.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1478095738000</date>
  <contentUpdateDate>1477650719000</contentUpdateDate>
  <version>1.1</version>
  <title>CommentAnalysis</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content/>
  <object>
    <name>LPCode.CommentAnalysis</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>7bd77f92-3a55-4077-807d-d7f5409672bb</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require(['jquery', 'xwiki-meta', 'bootstrap'], function ($, xm) {

    // Velocity here
    #set ($userId = $xcontext.user)
    #if ("$!userId" == "XWiki.XWikiGuest") #set ($userId = "") #end
    var userId = encodeURIComponent("$userId");
    // End velocity

    var getHtml = function (textContent, redirectUrl) {
        if (redirectUrl) {
            return '&lt;a href="' + redirectUrl + '" target="_blank"&gt;View the profile page&lt;/a&gt;' + textContent;
        }
        return textContent;
    };

    var displayModal = function(textContent, redirectUrl) {
        $('.xdialog-modal-container').remove();
        if(XWiki.widgets.CommentAnalysis) {
            new XWiki.widgets.CommentAnalysis();
            $('#learnpadAnalysisModal').html(getHtml(textContent, redirectUrl));
            return;
        }
        XWiki.widgets.CommentAnalysis = Class.create(XWiki.widgets.ModalPopup, {
            /** Default parameters can be added to the custom class. */
            defaultInteractionParameters : {
            },
            /** Constructor. Registers the key listener that pops up the dialog. */
            initialize : function($super, interactionParameters) {
                this.interactionParameters = Object.extend(Object.clone(this.defaultInteractionParameters), interactionParameters || {});
                // call constructor from ModalPopup with params content, shortcuts, options
                $super(
                this.createContent(this.interactionParameters, this),
                    {
                        "show"  : { method : this.showDialog,  keys : [] },
                        "close" : { method : this.closeDialog, keys : ['Esc'] }
                    },
                    {
                        displayCloseButton : true,
                        verticalPosition : "middle",
                        backgroundColor : "#FFF"
                    }
                );
                this.showDialog();
                $(this.dialogBox).css('top', '20%');
                $(this.dialogBox).css('height', '60%');
                $(this.dialogBox).css('width', '40%');
                $(this.dialogBox).attr('id', 'learnpadAnalysisModalContainer');
                $(document).trigger('insertButton');
            },
            /** Get the content of the modal dialog using ajax */
            createContent : function (data, modal) {
                var content =  new Element('div', {'class': 'modal-popup', id: 'learnpadAnalysisModal'});
                content.insert(getHtml(textContent, redirectUrl));
                return content;
            }
        });
        new XWiki.widgets.CommentAnalysis();
    };

    // Click a recommended element
    var onClick = function (evt) {
        var elmt = $(evt.target);
        displayModal(elmt.data('lp'), elmt.data('redirect'));
        elmt.css('background-color', '#ffc');
    };

    var createElementsList = function (elements, parent) {
        var data = '';
        for (var k in elements) {
            if ($(parent).children(k).text().trim()) {
                if (typeof elements[k] === "string") {
                  data += '&lt;u&gt;' + elements[k] + '&lt;/u&gt;: ' + $(parent).children(k).text().trim() + '&lt;br&gt;';
                }
                else {
                  data += elements[k].content.replace(/\{0\}/g, $(parent).children(k).text().trim()) + '&lt;br&gt;';
                }
            }
        }
        return data.replace(/&lt;br&gt;$/, '');
    }

    var addData = function (xmlEntity, elmt) {
        var properties = {
            'name': { content: '&lt;strong&gt;{0}&lt;/strong&gt;&lt;br&gt;' },
            'role': 'Role',
            'email': { content: '&lt;a href="mailto:{0}"&gt;{0}&lt;/a&gt;' },
            'phoneNumber': { content: '&lt;strong&gt;{0}&lt;/strong&gt;' },
            'skypeId': 'Skype',
            'officeAddress': 'Office address',
            'description': 'Description'
        };
        var entityData = createElementsList(properties, xmlEntity);
        var data = '&lt;div id="learnpadModalEntity"&gt;' + entityData + '&lt;/div&gt;';

        var relatedObjects = $(xmlEntity).siblings('relatedObjects');
        if (relatedObjects.length) {
            var rProperties = {
                'name': { content: '&lt;strong&gt;{0}&lt;/strong&gt;' },
                'description': { content: '&lt;em&gt;{0}&lt;/em&gt;' },
                'documentUrl': { content: '&lt;a href="{0}" target="_blank" rel="noopener noreferrer"&gt;{0}&lt;/a&gt;' }
            };
            var relatedData = '&lt;h2&gt;Related objects&lt;/h2&gt;';
            var rObjects = relatedObjects.children('relatedObjects');
            rObjects.each(function (i, e) {
                relatedData += '&lt;div class="learnpad-related"&gt;' + createElementsList(rProperties, e) + '&lt;/div&gt;';
            });
            data += '&lt;div id="learnpadModalRelated"&gt;' + relatedData + '&lt;/div&gt;';
        }

        $(elmt).attr('data-lp', data);
    };

    //Parse the XML result
    var processXML = function (modelsetId, comment, xml) {
        var content = $(xml).find('analyzedContent').html();
        var decodedText = $("&lt;p/&gt;").html(content).text(); 
        comment.find('.commentcontent').html(decodedText);
        $(xml).find('entity').each(function (idx, elmt) {
            var id = $(elmt).find('id');
            var entity = id.next();
            if (!entity.length) { return; }

            var dataElmt = comment.find('[data-recommendation="' + id.text() + '"]');
            addData(entity, dataElmt);

            // NOTE: We have to use the email to determine the user document since it is not provided yet by the REST query
            if (entity.find('email').length) {
                var email = $(entity).find('email').text();

                $.ajax({
                    url: '/xwiki/bin/get/LPCode/GetUser?outputSyntax=plain',
                    dataType: 'json',
                    type: "POST",
                    data: {email: email}
                }).done(function (data) {
                    if (!data || !data.url) { return; }
                    $(dataElmt).attr('data-redirect', data.url);
                });
            }
        });

        comment.find('[data-recommendation]').each(function (idx, elmt) {
            $(elmt).click(onClick);
        });
    };

    // Rest call
    var analyseComment = function (comment) {
        // Get the content
        var contentElmt = comment.find('.commentcontent');
        var content = contentElmt.length ? contentElmt.html() : null;
        if (!content) { return; }

        // Get the document metadata
        var docReferences = xm.documentReference.getReversedReferenceChain();
        var modelsetId = encodeURI(docReferences[1].name);
        var artifactId = (docReferences.length === 5) ? encodeURIComponent(docReferences[3].name) : "";

        // Analyse the text
        var queryString = '?userid=' + userId + '&amp;title=&amp;contextArtifactId=' + artifactId;
        $.ajax({
            url: '/xwiki/rest/learnpad/cw/corefacade/semantic/' + modelsetId + '/analysetext' + queryString,
            method: 'POST',
            data: content,
            contentType: 'text/plain',
            dataType: "xml"
        }).done(function(xml) {
            processXML(modelsetId, comment, xml);
        }).fail(function(msg) {
            setTimeout(function () {
                analyseComment(comment);
            }, 5000);
            console.error(msg);
        });
    };

    var comments = $('.xwikicomment');

    var startAnalyse = function() {
        $('.xwikicomment').each(function (idx, elmt) {
            analyseComment($(elmt));
        });
    };

    // If comments are loaded, we have to start now. If they aren't loaded yet, we wait for the event.
    if (comments.length) {
        startAnalyse();
    }
    document.observe("xwiki:docextra:loaded", function(event){
        var tabID = event.memo.id;
        if (tabID == "Comments") {
            startAnalyse();
        }
    });
});</code>
    </property>
    <property>
      <name>CommentAnalysis</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>always</use>
    </property>
  </object>
  <object>
    <name>LPCode.CommentAnalysis</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>232923ae-1558-4297-8378-35386705806d</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>6</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>3</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>1</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>2</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>5</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>4</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>.xwikicomment [data-recommendation] {
  background-color: #ffd;
  cursor: pointer;
}

.xwikicomment [data-recommendation]:hover {
  background-color: #ffb;
}

.commentcontent .tooltip .tooltip-inner {
  text-align: left;
}

#learnpadAnalysisModalContainer {
  padding: 0;
  overflow: hidden;
}

#learnpadAnalysisModalContainer .xdialog-content {
  height: 100%;
}

#learnpadAnalysisModal &gt; a {
  position: absolute;
  right: 0.8em;
}

#learnpadAnalysisModal {
  display: flex;
  flex-flow: column;
  height: 100%;
  padding-bottom: 1.6em;
}

#learnpadModalEntity {
  overflow-y: auto;
  overflow-x: hidden;
}

#learnpadModalRelated {
  flex: 1;
  overflow-y: auto;
  overflow-x: hidden;
  margin-top: 15px
}

.learnpad-related {
  padding: 10px;
  margin: 5px;
  background: #eee;
  border-radius: 10px;
}
.learnpad-related:hover {
  background: #eff;
}
</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name>CommentAnalysis</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>always</use>
    </property>
  </object>
</xwikidoc>
