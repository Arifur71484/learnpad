<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.2" reference="LPUI.Dashboard" locale="">
  <web>LPUI</web>
  <name>Dashboard</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1462185387000</creationDate>
  <parent>WebIDE.LearnPAd</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1462206362000</date>
  <contentUpdateDate>1462206356000</contentUpdateDate>
  <version>1.1</version>
  <title>Dashboard</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity}}
#set ($userid = $services.model.serialize($xcontext.userReference).replace("XWiki.", ""))
## IDs differnces betwwen IDs systems (e.g. email, xwikis) are solved in the LP-CP
## #set ($userEmail = $xwiki.getUser($xcontext.userReference).getEmail())
#set ($modelid = $request.getParameter("modelid"))
## Hard-coded for the moment since the ID may change with ME's import and SIM is not relying on BPMN files from ME
#set ($modelsetid = "LP_ME_ADOXX_MODELSET_28600")
## Hard-coded for the moment since the ID may change with ME's import and SIM is not relying on BPMN files from ME
#set ($modelid = "mod.27772")
############# DASHBOARD KPI Part ##################################
## #set ($dashboardReference = $services.model.createDocumentReference($xcontext.database, 'LPUI', 'Dashboard'))
(% class="help-block text-center" %)
{{warning}}
${services.localization.render('LPUI.Dashboard.calculate.warning')}
{{/warning}}
## [[${services.localization.render('LPUI.Dashboard.calculate.button')}&gt;&gt;${dashboardReference}||queryString="calculateKPI=true" class="btn btn-block btn-simulation"]]
(% id="dash-calculatekpi" class="btn btn-block btn-simulation" %)${services.localization.render('LPUI.Dashboard.calculate.button')}
##

## #if($request.calculateKPI)
##  #set ($kpiCalulationProcessId = "${services.learnpad.startDashboardKpiCalculation($modelsetid)}")
## #end
##
  #if ("$!{userid}" != "superadmin" &amp;&amp; "$!{userid}" != "Admin" &amp;&amp; "$!{userid}" != "XWikiGuest")
    #set ($dashboardkpiURL = "${services.learnpad.getDashboardKpiDefaultViewer($modelsetid,$userid)}")
  #end
##
#if ("$!dashboardkpiURL" != "")
{{html clean="false"}}
&lt;input type="hidden" id="LPDash.modelsetid" name="LPDash.modelsetid" value="${modelsetid}" /&gt;
&lt;iframe id="dashboardkpi-iframe" height="500" width="100%" src="${dashboardkpiURL}"&gt;
Your browser doesn't support &lt;pre&gt;iframe&lt;/pre&gt;.
&lt;/iframe&gt;
{{/html}}
#end
############### Results From SIM Part ################################
#set ($listmodelid = [])
#if ("$!modelid" != "")
  #set ($discard = $listmodelid.add($modelid))
#else
  #set ($query = "select obj.id from Document doc, doc.object(LPCode.ModelClass) as obj where obj.type = 'bpmn'")
  #set ($results = $services.query.xwql($query).execute())
  #foreach ($mid in $results)
    #set ($discard = $listmodelid.add($mid))
  #end
#end
#foreach ($modelid in $listmodelid)
#set ($modelReference = $services.model.createDocumentReference($xcontext.database, [$modelsetid, $modelid], "WebHome"))
#set ($modelObject = $modelReference.getObject("LPCode.ModelClass"))
#set ($modelTitle = $modelObject.getProperty("name").value)
## Hard-coded for the moment since the ID may change with ME's import and SIM is not relying on BPMN files from ME
#set ($modelTitle = "01 - Titolo Unico")
= ${services.localization.render('LPUI.Dashboard.section.title', [$modelTitle])} =
  (% class="score-table" %)(((
    #set ($listscores = $services.learnpad.getScores($userid, $modelid))
    #if ("$!listscores" != "")
      #set ($scores = $listscores.getScoreRecords())
      #foreach ($score in $scores)
        |$xwiki.getUserName($services.model.serialize($xcontext.userReference), false)|$score.score
      #end
    #end
  )))
#end
{{/velocity}}</content>
  <object>
    <name>LPUI.Dashboard</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>a12cf8c9-fdc9-4daf-96aa-4f5a578349c8</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>default</cache>
    </property>
    <property>
      <code>require.config({
    paths: {
      "Q": "/xwiki/bin/jsx/LPCode/Q"
    }
});
require(["jquery", "xwiki-meta", "Q"], function ($, xm, Q) {
$(function(){
  var mapReference = function mapReference(reference) {
    var map = {"page": reference.name, "spaces": [], "wiki": ""};
    var r = reference.parent;
    while(r.parent != null) {
      map.spaces.unshift(r.name);
      r = r.parent;
    }
    map.wiki = r.name;
    return map;
  };
  var getTitle = function getTitle(reference) {
    return Q.Promise(function(resolve, reject, notify) {
      var map = mapReference(reference);
      var url = "/xwiki/rest/wikis/" + map.wiki;
      for (space of map.spaces) {
        url += "/spaces/" + space;
      }
      url += "/pages/" + map.page;
      url += "?media=json";
      $.ajax({
        "url": url,
        "method": "GET",
        "accept": "application/json"
      }).done(function(data, status, xhr) {
        resolve(data.title);
      }).fail(function(xhr, status, err) {
        reject(err);
      });
    });
  };
  var getContent = function getContent(reference, syntax) {
    return Q.Promise(function(resolve, reject, notify) {
      var map = mapReference(reference);
      var url = "/xwiki/bin/get/LPCode/Render?outputSyntax=plain";
      url += "&amp;reference=" + encodeURIComponent(reference);
      url += "&amp;syntax=" + syntax;
      $.ajax({
        "url": url,
        "method": "GET",
        "accept": "text/" + syntax
      }).done(function(data, status, xhr) {
        resolve(data);
      }).fail(function(xhr, status, err) {
        reject(err);
      });
    })
  };
  var computekpi = function computekpi(modelsetid) {
    return Q.Promise(function(resolve, reject, notify) {
      var url = "/xwiki/rest/learnpad/cw/corefacade/dashboardkpi/"
      url += modelsetid + "/calculatekpi"
      $.ajax({
        "url": url,
        "method": "GET",
        "accept": "text/plain",
      }).done(function(data, status, xhr) {
        resolve(data);
      }).fail(function(xhr, status, err) {
        reject(err);
      });
    });
  };
  var status = function status(kpiprocessid) {
    return Q.Promise(function(resolve, reject, notify) {
      var url = "/xwiki/rest/learnpad/cw/corefacade/dashboardkpi/" + kpiprocessid + "/status";
      var askStatus = function askStatus() {
        $.ajax({
          "url": url,
          "method": "GET",
          "accept": "application/xml"
        }).done(function(data, status, xhr) {
          var xmlres = xhr.responseXML;
          var statusValue = $(xmlres).find("Status")[0].textContent;          
          if(statusValue == "COMPLETED") {
            resolve();
          } else if(xhr.statusText == "OK") {
            setTimeout(askStatus, 200);
            notify(0.5);
          } else {
            reject(new Error("The computation of the KPI failed due to an unexpected error."));
          }
        }).fail(function(xhr, status, err) {
          reject(err);
        });
      };
      askStatus();
    });
  };
  var getURL = function getURL(kpiprocessid) {
    return Q.Promise(function(resolve, reject, notify) {
      status(kpiprocessid).progress(function(progress) {
        $("#dash-progressbar").css("width", (100.0*progress)+"%");
      }).done(function() {
        var url = window.location.href;
        resolve(url);
      });
    });
  };
  validatebtn = $("#dash-calculatekpi");
  validatebtn.on("click", function(e) {
    e.preventDefault();
    $("#dash-calculatekpi").after('&lt;div id="dash-progressbar"&gt;&lt;/div&gt;');
    Q.all([
    ]).then(function(data) {
      var modelsetid = $("#LPDash\\.modelsetid").val();
      return computekpi(modelsetid);
    }).then(function(kpiprocessid) {
      return getURL(kpiprocessid);
    }).then(function(url) {
      $("#dash-progressbar").css("width", "100%");
      var link = $('&lt;a&gt;&lt;/a&gt;').attr('href', url).attr('target', '_blank').text('Check new KPIs');
      var linktext = $('&lt;div&gt;&lt;/div&gt;').append(link);
      validatebtn.after(linktext);
      $("#dash-progressbar").remove();
      window.location.reload(false); 
    });
  });
});
});</code>
    </property>
    <property>
      <name>Sort tables</name>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
  <object>
    <name>LPUI.Dashboard</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>94764af3-5b43-4c16-bac3-c26456240960</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>6</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <disabled>0</disabled>
        <name>code</name>
        <number>3</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>1</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>2</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>5</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>4</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>#dash-progressbar {
  display: block;
  width: 0%;
  height: 0px;
  border-style: solid;
  border-color: #337ab7;
  border-width: 1px;
}
      .css("display", "block")
      .css("width", "0%")
      .css("height", "0px")
      .css("border-style", "solid")
      .css("border-color", "#337ab7")
      .css("border-width", "1px");</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse/>
    </property>
    <property>
      <use>currentPage</use>
    </property>
  </object>
</xwikidoc>
